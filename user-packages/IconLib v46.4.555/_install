; IconLib v46.4.555
; -----------------
;
; Date: 2021-12-02
; Author: Henrik Noerfjand Stengaard
;
; User package for HstWB Installer to automate installation of icon library v46.4.555.


; paths
set cdir "`execute INSTALLDIR:S/CombinePath "$INSTALLDIR" "C"`"
set libsdir "`execute INSTALLDIR:S/CombinePath "$INSTALLDIR" "Libs"`"
set sdir "`execute INSTALLDIR:S/CombinePath "$INSTALLDIR" "S"`"
set bootstartup "`execute INSTALLDIR:S/CombinePath "$INSTALLDIR" "S/Boot-Startup"`"
set startupsequence "`execute INSTALLDIR:S/CombinePath "$INSTALLDIR" "S/Startup-Sequence"`"

; fail, if startup sequence doesn't exist
If Not Exists "$startupsequence"
  echo "Error: Startup sequence '$startupsequence' not found!"
  echo ""
  ask "Press ENTER to continue"
  Skip end
EndIf

; show select icon library cpu version request choice
set cpu `RequestChoice "IconLib CPU version" "Select icon.library CPU version to install*N*NDefault is 68000." "68020|68000|Default"` 

; write install status
echo "IconLib..."

; extract IconLib to temp systemdir
lha -m1 -q x "USERPACKAGEDIR:IconLib_46.4.lha" "SYSTEMDIR:Temp/_IconLib/"

; install IconLib files
If "$cpu" EQ 1 VAL
  Copy >NIL: "SYSTEMDIR:Temp/_IconLib/IconLib_46.4/Libs/68020/icon.library" "$libsdir" CLONE
Else
  Copy >NIL: "SYSTEMDIR:Temp/_IconLib/IconLib_46.4/Libs/68000/icon.library" "$libsdir" CLONE
EndIf
Copy >NIL: "SYSTEMDIR:Temp/_IconLib/IconLib_46.4/ThirdParty/LoadResident/LoadResident" "$cdir" CLONE
Copy >NIL: "SYSTEMDIR:Temp/_IconLib/IconLib_46.4/ThirdParty/RemLib/RemLib" "$cdir" CLONE
Copy >NIL: "SYSTEMDIR:Temp/_IconLib/IconLib_46.4/C/#?" "$cdir" ALL CLONE

; delete IconLib from temp systemdir
Delete >NIL: "SYSTEMDIR:Temp/_IconLib" ALL


; show modify startup sequence request choice
set confirm "`RequestChoice "IconLib startup sequence" "Modifying startup sequence to load*Nicon.library resident is required for Amiga OS 3.1*Nto use updated icon.library and is*Nnot needed for Amiga OS 3.2 and 3.1.4!*N*NDo you want to modify startup sequence*Nto load icon.library resident?" "Yes|No"`"
IF NOT "$confirm" EQ 1 VAL
  SKIP end
ENDIF

; install modules startup
Copy >NIL: USERPACKAGEDIR:Modules-Startup "$sdir"

; create backup of startup sequence, if present
If Not Exists "$startupsequence.IconLib"
  Copy >NIL: "$startupsequence" "$startupsequence.IconLib"
EndIf

; find set patch in startup sequence
Search "$startupsequence" "SetPatch" NONUM >T:_setpatch1
IF $RC EQ 0 VAL
  ; add boot startup to startup sequence after "SetPatch", if not present 
  Search >NIL: "$startupsequence" "Execute S:Boot-Startup" quiet
  IF NOT $RC EQ 0 VAL
    ; get found set patch text
    sed "1q;d" T:_setpatch1 >T:_setpatch2
    set setpatch `type T:_setpatch2`

    rep "$startupsequence" "$setpatch" "If Exists S:Boot-Startup*N  Execute S:Boot-Startup*NEndIf*N$setpatch"
  ENDIF
ELSE
  echo "*e[1mError: Unable to add boot startup,*N'SetPatch'*Nnot found in startup sequence.*NBoot startup can't be installed without this!*e[0m"
  ask "Press ENTER to continue"
ENDIF
Delete >NIL: T:_setpatch#?

; add modules startup to boot startup, if not present
If Exists "$bootstartup"
  Search >NIL: "$bootstartup" "Execute S:Modules-Startup" quiet
  IF NOT $RC EQ 0 VAL
    Type USERPACKAGEDIR:Add-Modules-Startup >>"$bootstartup"
  ENDIF
Else
  Copy USERPACKAGEDIR:Add-Modules-Startup "$bootstartup"
EndIf


; end
; ---
LAB end
