# This is a basic workflow to help you get started with Actions

name: Prerelease

# Controls when the workflow will run
# Allows you to run this workflow manually from the Actions tab
on: [workflow_dispatch]

# default environment variables
env:
  TARGET: 'win'
  ARTIFACT_FILTER: '*.exe'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Windows release
        shell: pwsh
        run: |
          "TARGET=win" >> $env:GITHUB_ENV
          "ARTIFACT_FILTER=*.exe" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'
        
      - name: Set macOS release
        shell: pwsh
        run: |
          "TARGET=osx" >> $env:GITHUB_ENV
          "ARTIFACT_FILTER=*.dmg" >> $env:GITHUB_ENV
        if: matrix.os == 'macos-latest'

      - name: Set Linux release
        shell: pwsh
        run: |
          "TARGET=linux" >> $env:GITHUB_ENV
          "ARTIFACT_FILTER=*.dmg" >> $env:GITHUB_ENV
        if: matrix.os == 'macos-latest'
      
      - name: Set version
        working-directory: ./src
        shell: pwsh
        run: |
          "BUILD_VERSION=0.1.{0}" -f (git rev-list --count $env:GITHUB_REF) >> $env:GITHUB_ENV

      - name: show version
        shell: pwsh
        run: |
          "BUILD_VERSION: ${{ env.BUILD_VERSION }}"

      - name: Update Electron manifest version
        working-directory: ./src
        run: powershell -Command "[System.IO.File]::WriteAllText('.\HstWbInstaller.Imager.GuiApp\electron.manifest.json', ([System.IO.File]::ReadAllText('.\HstWbInstaller.Imager.GuiApp\electron.manifest.json') -replace '0.1.0', '${{ env.BUILD_VERSION }}'))"
        if: matrix.os == 'windows-latest'

      - name: Update package json version
        working-directory: ./src
        run: powershell -Command "[System.IO.File]::WriteAllText('.\HstWbInstaller.Imager.GuiApp\ClientApp\package.json', ([System.IO.File]::ReadAllText('.\HstWbInstaller.Imager.GuiApp\ClientApp\package.json') -replace '0.1.0', '${{ env.BUILD_VERSION }}'))"
        if: matrix.os == 'windows-latest'

      - name: Setup .NET Core 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore tool
        working-directory: ./src
        shell: pwsh
        run: dotnet tool restore

      - name: Electronize build
        working-directory: ./src
        shell: pwsh
        run: |
          cd HstWbInstaller.Imager.GuiApp
          dotnet electronize build /target ${{ env.TARGET }}

      - name: List output files
        shell: pwsh
        run: |
          (gci './src/HstWbInstaller.Imager.GuiApp/bin/Desktop' -Filter '${{ env.ARTIFACT_FILTER }}' | Select-Object -First 1).FullName